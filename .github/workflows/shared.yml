on:
  - workflow_call

jobs:
  cache_dependencies:
    name: Cache Dependencies
    uses: ./.github/workflows/cache_dependencies.yml

  build_library:
    name: Build Library
    needs: cache_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Build for production
        run: pnpm build

  build_demo:
    name: Build Demo
    needs: cache_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Update application version
        run: sed -i "s/APP_VERSION = \".*\"/APP_VERSION = \"v$(jq -r .version package.json)-$(git rev-parse --short HEAD)\"/g" projects/demo/src/app/app.component.ts
      - name: Build for production
        run: pnpm build:demo

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: cache_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Run unit test
        run: pnpm test:ci
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: pgerke/ngx-mat-table-multi-sort
      - name: Extract version
        id: version-extraction
        run: echo "APP_VERSION=$(jq -r .version package.json)" >> "$GITHUB_OUTPUT"
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.version-extraction.outputs.APP_VERSION }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: cache_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Run linter
        run: pnpm lint

  audit:
    name: Audit
    runs-on: ubuntu-latest
    needs: cache_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Run audit
        run: pnpm audit --prod

  gitleaks:
    name: Check for Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Run Gitleaks Check
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
