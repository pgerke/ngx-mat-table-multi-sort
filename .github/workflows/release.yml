name: Release

on:
  pull_request:
    types: closed
    branches:
      - main
      - v*

jobs:
  check_release_trigger:
    name: Check if PR will trigger a Release
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}
    outputs:
      version_changed: ${{ steps.detect_version_change.outputs.version_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Detect version change
        id: detect_version_change
        uses: ./.github/actions/detect-version-change

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [check_release_trigger]
    if: ${{ needs.check_release_trigger.outputs.version_changed == 'true' && !contains(github.event.head_commit.message, '[skip deploy]') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Get new version and changelog
        id: extract_version
        uses: ./.github/actions/get-version-and-changelog
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: ${{ github.ref == 'refs/heads/main' }}
          target_commitish: "${{ github.ref }}"
          tag_name: "${{ steps.extract_version.outputs.version }}"
          name: "v${{ steps.extract_version.outputs.version }}"
          body: |
            ${{ steps.extract_version.outputs.changelog }}
          prerelease: ${{ contains(steps.extract_version.outputs.version, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    needs: [check_release_trigger]
    if: ${{ needs.check_release_trigger.outputs.version_changed == 'true' && !contains(github.event.head_commit.message, '[skip deploy]') }}
